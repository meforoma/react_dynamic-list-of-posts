{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","api/posts.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","components/UserSelect/UserSelect.tsx","App.tsx","index.tsx"],"names":["PostsList","props","className","posts","length","map","post","userId","title","id","toString","type","onClick","event","toggle","selectedPostId","currentTarget","selectPost","BASE_URL","request","endpoint","postId","methodParam","fetch","method","then","response","ok","json","Error","status","statusText","getPostComments","NewCommentForm","updateComments","useState","name","email","body","comment","setComment","handleSubmit","headers","JSON","stringify","submitComment","handleChange","target","evName","value","allowSubmit","onSubmit","preventDefault","required","placeholder","onChange","PostDetails","postDetails","setPostDetails","postComments","setPostComments","toggleComments","setToggleComments","watchComment","setWatchComment","useEffect","commentId","UserSelect","selectUser","htmlFor","App","user","setUser","setPosts","setSelectedPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.028974ee.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport './PostsList.scss';\n\nimport { Post } from '../../types/types';\n\ntype Props = {\n  posts: Post[];\n  selectPost: (x: number) => void;\n  selectedPostId: number;\n};\n\nexport const PostsList: React.FC<Props> = (props) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>{`Posts: ${props.posts.length}`}</h2>\n\n      <ul className=\"PostsList__list\">\n\n        {props.posts.map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>\n                {`[User #${post.userId}]: `}\n              </b>\n              {post.title}\n            </div>\n\n            <button\n              id={post.id.toString()}\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={(event) => {\n                const toggle = props.selectedPostId === post.id\n                  ? 0\n                  : +event.currentTarget.id;\n\n                props.selectPost(toggle);\n              }}\n            >\n              {props.selectedPostId === post.id\n                ? 'Close'\n                : 'Open'}\n            </button>\n          </li>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\n\nexport const request = (\n  endpoint = '/posts',\n  postId = '',\n  userId = '',\n  methodParam = 'GET',\n) => {\n  return fetch(`${BASE_URL}${endpoint}${postId}${userId}`, { method: methodParam })\n    .then(response => {\n      if (!response.ok) {\n        return new Error(`${response.status} -- ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getUserPosts = (userId: number) => {\n  if (!userId) {\n    return request('/posts');\n  }\n\n  return request('/posts', '', `?userId=${+userId}`);\n};\n\nexport const getPostDetails = (postId: number) => {\n  return request('/posts', `/${postId}`);\n};\n\nexport const getPostComments = (postId: number) => {\n  return request('/comments', '', `?postId=${postId}`);\n};\n\nexport const removeComment = (commentId: number) => {\n  return request('/comments', '', `/${commentId}`, 'DELETE');\n};\n\nexport const submitComment = (comment: {}) => {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(comment),\n  });\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport { submitComment } from '../../api/posts';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  postId: number;\n  updateComments: () => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ postId, updateComments }) => {\n  const [comment, setComment] = useState({\n    name: '',\n    email: '',\n    body: '',\n  });\n\n  const { name, email, body } = comment;\n\n  const resetState = () => {\n    setComment({\n      name: '',\n      email: '',\n      body: '',\n    });\n  };\n\n  const handleSubmit = () => {\n    const commentToSubmit = {\n      postId,\n      name,\n      email,\n      body,\n    };\n\n    submitComment(commentToSubmit);\n\n    resetState();\n    updateComments();\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n    | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { name: evName, value } = event.target;\n\n    setComment({\n      ...comment,\n      [evName]: value,\n    });\n  };\n\n  const allowSubmit = name.length > 0\n    && email.length > 0\n    && body.length > 0;\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n\n        handleSubmit();\n      }}\n    >\n\n      <div className=\"form-field\">\n        <input\n          required\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"* Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => handleChange(event)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          required\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"* Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => handleChange(event)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          required\n          name=\"body\"\n          placeholder=\"* Comment body:\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => handleChange(event)}\n        />\n      </div>\n\n      {allowSubmit && (\n        <button\n          type=\"submit\"\n          className=\"NewCommentForm__submit-button button\"\n        >\n          ✅ Add a comment\n        </button>\n      )}\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPostComments, getPostDetails, removeComment } from '../../api/posts';\nimport { Post, PostComment } from '../../types/types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number;\n};\n\nexport const PostDetails: React.FC<Props> = (props) => {\n  const [postDetails, setPostDetails] = useState<Post>();\n  const [postComments, setPostComments] = useState([]);\n  const [toggleComments, setToggleComments] = useState(true);\n  const [watchComment, setWatchComment] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(props.selectedPostId)\n      .then(setPostDetails);\n\n    getPostComments(props.selectedPostId)\n      .then(setPostComments);\n  }, [props.selectedPostId, watchComment]);\n\n  const updateComments = () => {\n    getPostComments(props.selectedPostId)\n      .then(setPostComments);\n\n    setWatchComment(!watchComment);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h3>{`Post details (id ${postDetails?.id}):`}</h3>\n\n      <section className=\"PostDetails__post\">\n        <p>{postDetails?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {(postComments.length && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => setToggleComments(!toggleComments)}\n          >\n            {`${toggleComments ? 'Hide' : 'Show'} `\n              + `${postComments.length} comment(s)`}\n          </button>\n        )) || 'No comments yet'}\n\n        <ul className=\"PostDetails__list\">\n\n          {toggleComments && (\n            postComments.map((comment: PostComment) => (\n              <li key={comment.id} className=\"PostDetails__list-item\">\n                <button\n                  id={comment.id.toString()}\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    removeComment(comment.id);\n                    updateComments();\n                  }}\n                >\n                  X\n                </button>\n\n                <div>{`Comment by ${comment.email}`}</div>\n                <div>{`Name: ${comment.name}`}</div>\n                <div>{`Body: ${comment.body}`}</div>\n\n              </li>\n            ))\n          )}\n\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={props.selectedPostId}\n            updateComments={updateComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  userId: number | string,\n  selectUser: (userId: number) => void,\n};\n\nexport const UserSelect: React.FC<Props> = ({\n  userId,\n  selectUser,\n}) => {\n  return (\n    <label htmlFor=\"user-selector\">\n      Select a user: &nbsp;\n\n      <select\n        id=\"user-selector\"\n        className=\"App__user-selector\"\n        onChange={(event) => selectUser(+event.target.value)}\n        value={userId}\n      >\n        <option value=\"0\">All users</option>\n        <option value=\"1\">Leanne Graham</option>\n        <option value=\"2\">Ervin Howell</option>\n        <option value=\"3\">Clementine Bauch</option>\n        <option value=\"4\">Patricia Lebsack</option>\n        <option value=\"5\">Chelsey Dietrich</option>\n        <option value=\"6\">Mrs. Dennis Schulist</option>\n        <option value=\"7\">Kurtis Weissnat</option>\n        <option value=\"8\">Nicholas Runolfsdottir V</option>\n        <option value=\"9\">Glenna Reichert</option>\n        <option value=\"10\">Leanne Graham</option>\n      </select>\n    </label>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\nimport { UserSelect } from './components/UserSelect/UserSelect';\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState<number>(0);\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState<number>(0);\n\n  useEffect(() => {\n    getUserPosts(user)\n      .then(setPosts);\n  }, [user, selectedPostId]);\n\n  const selectUser = (id: number) => {\n    setUser(id);\n  };\n\n  const selectPost = (id: number) => {\n    setSelectedPostId(id);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect\n          userId={user}\n          selectUser={selectUser}\n        />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectPost={selectPost}\n            selectedPostId={selectedPostId || 0}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId\n            ? (\n              <PostDetails\n                selectedPostId={selectedPostId || 0}\n              />\n            )\n            : <h3>Pick a post to view details</h3>}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}